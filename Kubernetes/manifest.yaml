apiVersion: v1
kind: Namespace
metadata:
  name: bookreview
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bookreview
  name: bookreview
  namespace: bookreview
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookreview
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-java: "true"
      labels:
        app: bookreview
    spec:
      containers:
      - image: ghcr.io/mochizuki875/bookreview:jdk17.0.5 
        name: bookreview
        imagePullPolicy: Always
        resources:
          limits:
            memory: "1Gi"
            cpu: "1"
        env:
        - name: buildEnv
          value: prod
        - name: SERVER_PORT
          value: "8080"
        - name: JAVA_TOOL_OPTIONS
          value: "-verbose:gc -XX:+PrintCommandLineFlags"
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://postgres.default.svc:5432/bookreview
        - name: SPRING_DATASOURCE_USERNAME
          value: bookreview
        - name: SPRING_DATASOURCE_PASSWORD
          value: bookreview
        - name: OTEL_SERVICE_NAME
          value: BookReview
        - name: OTEL_TRACES_EXPORTER
          value: otlp
        - name: OTEL_METRICS_EXPORTER
          value: none
        # - name: OTEL_EXPORTER_OTLP_ENDPOINT
        #   value: http://opentelemetry-collector.monitoring.svc:4317
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: bookreview
  name: bookreview
  namespace: bookreview
spec:
  selector:
    app: bookreview
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bookreview-ingress
  namespace: bookreview
spec:
  ingressClassName: nginx
  rules:
  - host: bookreview.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bookreview
            port:
              number: 8080